rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Allow users to read/write their own data
    match /users/{userId}/{document=**} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Allow authenticated users to read/write lootboxes they own
    match /lootboxes/{document=**} {
      allow read, write: if request.auth != null;
    }
    
    // Rules for group_boxes
    match /group_boxes/{groupBoxId} {
      // Anyone can read group boxes (for sharing)
      allow read: if true;

      // Split create vs update/delete rules
      allow create: if request.auth != null 
                    && request.auth.uid == request.resource.data.createdBy;
      allow update, delete: if request.auth != null 
                    && request.auth.uid == resource.data.createdBy;
      
      // Sub-collection: opens (anyone can read/create opens)
      match /opens/{openId} {
        allow read, create: if true;
        allow update, delete: if false; // Opens are permanent
      }
      
      // Sub-collection: user tries tracking
      match /user_tries/{userId} {
        allow read, write: if true; // Anyone can track their tries
      }

      // Sub-collection: session history (record join/leave/spin events)
      match /session_history/{historyId} {
        allow read, write: if request.auth != null;
      }
    }
    
    // Test collection
    match /tests/{document=**} {
      allow read, write: if request.auth != null;
    }
    
    // Spins collection
    match /spins/{document=**} {
      allow read, write: if request.auth != null;
    }
    
    // Chests collection
    match /chests/{document=**} {
      allow read: if true;
    }
  }
}
